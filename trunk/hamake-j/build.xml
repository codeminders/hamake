<?xml version="1.0" encoding="UTF-8"?>
<project name="hamake" default="all">


    <property file="build.properties"/>

    <!-- Compiler options -->
    <property name="compiler.debug" value="on"/>
    <property name="compiler.deprecation" value="off"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.max.memory" value="128m"/>
	<property name="src.dir" value="${basedir}/src/java" />
	<property name="test.dir" value="${basedir}/test/java" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="dist.dir" value="${basedir}/build" />
	<property name="test.build.dir" value="${build.base.dir}/test" />	

    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.jar"/>
    </patternset>


    <!-- Project Libraries -->

    <path id="library.commons.classpath">
        <fileset dir="${lib.dir}">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <target name="init" description="Build initialization">
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${test.build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${build.dir}"/>
        <javac classpathref="library.commons.classpath"
               destdir="${build.dir}"
               debug="${compiler.debug}"
               deprecation="${compiler.deprecation}"
               nowarn="${compiler.generate.no.warnings}"
               memoryMaximumSize="${compiler.max.memory}">
            <src path="${src.dir}"/>
        </javac>
    </target>

    <target name="dist" depends="compile, build-examples">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <copy todir="${lib.dir}">
            <fileset dir="lib" includes="*.jar" excludes="hadoop*.jar"/>
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${lib.dir}">
                <patternset refid="library.patterns"/>
            </fileset>
        </copy>
        <jar destfile="${dist.dir}/hamake-j-${hamake.version}.jar">
            <manifest>
                <attribute name="Main-Class" value="com.codeminders.hamake.Main"/>
            </manifest>
            <fileset dir="${build.dir}" includes="**/*.class"/>
            <fileset dir="${build.dir}" includes="lib/*.jar"/>
        </jar>
    </target>


    <target name="build-examples" depends="compile">
    	<mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.dir}/hamake-examples-${hamake.version}.jar"
             basedir= "${build.dir}"
             includes="com/codeminders/hamake/examples/**"/>
    </target>

    <!-- TODO: replace it to run hamake -->
    <target name="test" depends="build-examples">
        <delete dir="${test.build.dir}"/>
        <mkdir  dir="${test.build.dir}"/>
        <exec executable="hadoop">
            <arg value="jar"/>
            <arg value="${dist.dir}/hamake-examples-${hamake.version}.jar"/>
            <arg value="com.codeminders.hamake.examples.JarListing"/>
            <arg value="${dist.dir}/hamake-examples-${hamake.version}.jar"/>
            <arg value="${test.build.dir}/jar-listings"/>        
        </exec>
    </target>

    <target name="all" depends="dist" description="build all"/>
</project>