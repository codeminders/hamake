<?xml version="1.0" encoding="UTF-8"?>
<project name="hamake" default="all">


	<property file="build.properties" />

	<!-- Compiler options -->
	<property name="compiler.debug" value="on" />
	<property name="compiler.deprecation" value="off" />
	<property name="compiler.generate.no.warnings" value="off" />
	<property name="compiler.max.memory" value="128m" />
	<property name="src.dir" value="${basedir}/src/java" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="test.build.dir" value="${build.dir}/test" />
	<property name="test.src.dir" value="${test.dir}/java" />
	<property name="test.resources.dir" value="${test.dir}/resources" />

	<patternset id="ignored.files">
		<exclude name="**/CVS/**" />
		<exclude name="**/SCCS/**" />
		<exclude name="**/RCS/**" />
		<exclude name="**/rcs/**" />
		<exclude name="**/.DS_Store/**" />
		<exclude name="**/.svn/**" />
		<exclude name="**/.pyc/**" />
		<exclude name="**/.pyo/**" />
		<exclude name="**/*.pyc/**" />
		<exclude name="**/*.pyo/**" />
		<exclude name="**/.git/**" />
	</patternset>
	<patternset id="library.patterns">
		<include name="*.jar" />
	</patternset>


	<!-- Project Libraries -->

	<path id="library.commons.classpath">
		<fileset dir="${lib.dir}">
			<patternset refid="library.patterns" />
		</fileset>
	</path>

	<path id="test.classpath">
		<path refid="library.commons.classpath" />
		<pathelement location="${build.dir}/classes" />
	</path>

	<path id="test.runtime.classpath">
		<path refid="test.classpath" />
		<pathelement location="${test.build.dir}/classes" />
	</path>

	<target name="init" description="Build initialization">
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${test.build.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${build.dir}/classes" />
		<javac classpathref="library.commons.classpath" destdir="${build.dir}/classes" debug="${compiler.debug}" deprecation="${compiler.deprecation}" nowarn="${compiler.generate.no.warnings}" fork="yes" memoryMaximumSize="${compiler.max.memory}">
			<src path="${src.dir}" />
		</javac>
	</target>

	<target name="compile-test" depends="compile">
		<mkdir dir="${test.build.dir}/classes" />
		<javac classpathref="test.classpath" destdir="${test.build.dir}/classes" debug="${compiler.debug}" deprecation="${compiler.deprecation}" nowarn="${compiler.generate.no.warnings}" fork="yes" memoryMaximumSize="${compiler.max.memory}">
			<src path="${test.src.dir}" />
		</javac>
	</target>

	<target name="dist" depends="compile, build-examples">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${build.dir}/lib" />
		<copy todir="${build.dir}/lib">
			<fileset dir="lib" includes="*.jar" excludes="hadoop*.jar" />
		</copy>
		<copy todir="${dist.dir}">
			<fileset dir="${build.dir}/lib">
				<patternset refid="library.patterns" />
			</fileset>
		</copy>
		<jar destfile="${dist.dir}/hamake-j-${hamake.version}.jar">
			<manifest>
				<attribute name="Main-Class" value="com.codeminders.hamake.Main" />
			</manifest>
			<fileset dir="${build.dir}/classes" includes="**/*.class" excludes="com/codeminders/hamake/examples/**" />
			<fileset dir="${build.dir}" includes="lib/*.jar" />
		</jar>
	</target>


	<target name="build-examples" depends="compile">
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/hamake-examples-${hamake.version}.jar" basedir="${build.dir}" includes="com/codeminders/hamake/examples/**" />
	</target>

	<target name="junit" description="runs hamake-j JUnit tests" depends="compile-test">
		<mkdir dir="${test.build.dir}/test_report" />
		<junit showoutput="yes" haltonfailure="yes" fork="yes" dir="${test.resources.dir}" maxmemory="256M" printsummary="withOutAndErr">
			<classpath>
				<path refid="test.runtime.classpath" />
			</classpath>

			<test name="com.codeminders.hamake.AllHamakeTests" haltonfailure="no" outfile="nutch" todir="${test.build.dir}/test_report" fork="yes">
				<formatter type="xml" />
			</test>

		</junit>

		<junitreport todir="${test.build.dir}/test_report">
			<fileset dir="${test.build.dir}/test_report">
				<include name="*.xml" />
			</fileset>
			<report todir="${test.build.dir}/test_report" format="frames" />
		</junitreport>

	</target>

	<!-- TODO: replace it to run hamake -->
	<target name="test" depends="dist">
		<!--<delete dir="${test.build.dir}"/>-->
		<mkdir dir="${test.build.dir}" />
		<exec executable="hadoop">
			<arg value="jar" />
			<arg value="${dist.dir}/hamake-j-${hamake.version}.jar" />
			<arg value="-f" />
			<arg value="file://${test.dir}/resources/class-size.xml" />
			<arg value="-v" />
			<arg value="-t" />
		</exec>
	</target>

	<target name="all" depends="dist" description="build all" />
</project>